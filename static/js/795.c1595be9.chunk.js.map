{"version":3,"file":"static/js/795.c1595be9.chunk.js","mappings":"uPAEaA,EAAQC,EAAAA,GAAAA,MAAH,kTAcLC,EAAaD,EAAAA,GAAAA,OAAH,8pB,SCdVE,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,kBAAMA,SAAUA,EAAUC,aAAa,MAAvC,WACE,SAACL,EAAD,CAAOM,KAAK,OAAOC,KAAK,WACxB,SAACL,EAAD,CAAYI,KAAK,SAAjB,wB,iDCHOE,GAAkBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sICAfS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAACP,EAAD,CACEQ,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAFjB,SAIGG,EAAMK,SALFL,EAAME,UC8CvB,EA/CmB,WACjB,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAGA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAO,CACT,IAAMG,EAAW,mCAAG,6FAClBP,GAAa,GADK,mBAGOQ,EAAAA,EAAAA,IAAiBJ,GAHxB,gBAGRK,EAHQ,EAGRA,KACRX,EAAUW,EAAKC,SAJC,yEAOhBV,GAAa,GAPG,4EAAH,qDAUjBO,OAED,CAACH,IAOJ,OACE,4BACE,SAACzB,EAAD,CAAWC,SAPM,SAAA+B,GACnBA,EAAEC,iBACFT,EAAgB,CAAEC,MAAOO,EAAEE,cAAcC,SAASV,MAAMW,WAMrDhB,IACC,gBAAKiB,UAAU,SAAf,UACE,SAAC,KAAD,CACEC,MAAM,UACNC,WAAW,oBACXC,OAAQ,GACRC,MAAO,QAIb,SAAClC,EAAD,CAAYC,OAAQA,S,0MChDpBkC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,wCAA2CF,IAD7D,cACCG,EADD,yBAEEA,GAFF,kEAKA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCiB,GAAhC,yFACkBF,IAAAA,IAAA,kCACMF,EADN,kBACuBI,EADvB,yBADlB,uBACGhB,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kEAOA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BjC,GAA5B,yFACkB8B,IAAAA,IAAA,mBAAsB9B,EAAtB,oBAAoC4B,IADtD,uBACGZ,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlC,GAA/B,yFACkB8B,IAAAA,IAAA,mBAAsB9B,EAAtB,4BAA4C4B,IAD9D,uBACGZ,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnC,GAA/B,yFACkB8B,IAAAA,IAAA,mBAAsB9B,EAAtB,4BAA4C4B,IAD9D,uBACGZ,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAxBPc,IAAAA,SAAAA,QAAyB","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  /* width: 100%; */\n  margin-right: 10px;\n  height: 20px;\n  padding-left: 10px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus {\n    outline: none;\n    border-color: #2196f3;\n  }\n`;\n\nexport const FormButton = styled.button`\n  /* width: 200px; */\n  height: 20px;\n  color: #000;\n  border: none;\n  border-radius: 5px;\n  padding: 0px 25px;\n  background: #47a8f5;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n  &:hover {\n    color: #000;\n    background-color: #ecf0f4;\n    box-shadow: -7px -7px 20px 0px #fff9, -4px -4px 5px 0px #fff9,\n      7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;\n  }\n`;\n","import { Input, FormButton } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit} autoComplete=\"off\">\n      <Input type=\"text\" name=\"query\" />\n      <FormButton type=\"submit\">Search</FormButton>\n    </form>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMovieList = styled(Link)`\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #2196f3;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { StyledMovieList } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledMovieList\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            {movie.title}\n          </StyledMovieList>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { SearchBar } from '../components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Circles } from 'react-loader-spinner';\n\nimport { getMoviesByQuery } from '../services/api';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      const fetchMovies = async () => {\n        setIsLoading(true);\n        try {\n          const { data } = await getMoviesByQuery(query);\n          setMovies(data.results);\n        } catch (error) {\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchMovies();\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleSubmit} />\n      {isLoading && (\n        <div className=\"Loader\">\n          <Circles\n            color=\"#f07416\"\n            arialLabel=\"loading-indicator\"\n            height={80}\n            width={80}\n          />\n        </div>\n      )}\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'd16c53a3a4d5eb154f379745597d6181';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport async function getTrending() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return { data };\n}\n\nexport async function getMovieById(id) {\n  const { data } = await axios.get(`/3/movie/${id}?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}`);\n  return { data };\n}\n"],"names":["Input","styled","FormButton","SearchBar","onSubmit","autoComplete","type","name","StyledMovieList","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovies","getMoviesByQuery","data","results","e","preventDefault","currentTarget","elements","value","className","color","arialLabel","height","width","API_KEY","getTrending","axios","response","searchQuery","getMovieById","getMovieCredits","getMovieReviews"],"sourceRoot":""}