{"version":3,"file":"static/js/369.f5b06dfa.chunk.js","mappings":"6RAEaA,EAAeC,EAAAA,GAAAA,EAAH,wFAMZC,EAAaD,EAAAA,GAAAA,EAAH,oE,SCNVE,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACE,8BACE,wBACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,2BACE,SAACN,EAAD,UAAeM,EAAOC,UACtB,SAACL,EAAD,UAAaI,EAAOE,YAFbF,EAAOG,YCyC1B,EAzCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAaP,KACZ,CAACA,IAEJ,IAAMO,EAAY,mCAAG,WAAMP,GAAN,gFACnBK,GAAa,GADM,mBAGMG,EAAAA,EAAAA,IAAgBR,GAHtB,gBAGTS,EAHS,EAGTA,KACRN,EAAWM,EAAKC,SAJC,yEAQjBL,GAAa,GARI,4EAAH,sDAWlB,OACE,2BACGD,IACC,gBAAKO,UAAU,SAAf,UACE,SAAC,KAAD,CACEC,MAAM,UACNC,WAAW,oBACXC,OAAQ,GACRC,MAAO,OAIO,IAAnBrB,EAAQsB,QACP,SAACvB,EAAD,CAAYC,QAASA,KAErB,sE,0MCxCFuB,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,wCAA2CF,IAD7D,cACCG,EADD,yBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBH,IAAAA,IAAA,kCACMF,EADN,kBACuBK,EADvB,yBADlB,uBACGb,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kEAOA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA4BxB,GAA5B,yFACkBoB,IAAAA,IAAA,mBAAsBpB,EAAtB,oBAAoCkB,IADtD,uBACGR,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,yFACkBoB,IAAAA,IAAA,mBAAsBpB,EAAtB,4BAA4CkB,IAD9D,uBACGR,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,yFACkBoB,IAAAA,IAAA,mBAAsBpB,EAAtB,4BAA4CkB,IAD9D,uBACGR,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAxBPU,IAAAA,SAAAA,QAAyB","sources":["components/ReviewItem/ReviewItem.styled.js","components/ReviewItem/ReviewItem.jsx","pages/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewAuthor = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\n\nexport const ReviewText = styled.p`\n  font-size: 12px;\n  margin-bottom: 20px;\n`;\n","import { ReviewAuthor, ReviewText } from './ReviewItem.styled';\n\nexport const ReviewItem = ({ reviews }) => {\n  return (\n    <article>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <ReviewAuthor>{review.author}</ReviewAuthor>\n            <ReviewText>{review.content}</ReviewText>\n          </li>\n        ))}\n      </ul>\n    </article>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Circles } from 'react-loader-spinner';\n\nimport { getMovieReviews } from '../services/api';\nimport { ReviewItem } from '../components/ReviewItem/ReviewItem';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  const fetchReviews = async movieId => {\n    setIsLoading(true);\n    try {\n      const { data } = await getMovieReviews(movieId);\n      setReviews(data.results);\n    } catch (error) {\n      //   toast.error('Page is not found');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return (\n    <div>\n      {isLoading && (\n        <div className=\"Loader\">\n          <Circles\n            color=\"#f07416\"\n            arialLabel=\"loading-indicator\"\n            height={80}\n            width={80}\n          />\n        </div>\n      )}\n      {reviews.length !== 0 ? (\n        <ReviewItem reviews={reviews} />\n      ) : (\n        <p>We do not have reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd16c53a3a4d5eb154f379745597d6181';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport async function getTrending() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return { data };\n}\n\nexport async function getMovieById(id) {\n  const { data } = await axios.get(`/3/movie/${id}?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}`);\n  return { data };\n}\n"],"names":["ReviewAuthor","styled","ReviewText","ReviewItem","reviews","map","review","author","content","id","movieId","useParams","useState","setReviews","isLoading","setIsLoading","useEffect","fetchReviews","getMovieReviews","data","results","className","color","arialLabel","height","width","length","API_KEY","getTrending","axios","response","getMoviesByQuery","searchQuery","getMovieById","getMovieCredits"],"sourceRoot":""}